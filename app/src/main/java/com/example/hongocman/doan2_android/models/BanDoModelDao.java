package com.example.hongocman.doan2_android.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.hongocman.doan2_android.models.BanDoModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table BAN_DO_MODEL.
*/
public class BanDoModelDao extends AbstractDao<BanDoModel, Long> {

    public static final String TABLENAME = "BAN_DO_MODEL";

    /**
     * Properties of entity BanDoModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MaDiaDiem = new Property(0, long.class, "MaDiaDiem", true, "MA_DIA_DIEM");
        public final static Property DiaChi = new Property(1, String.class, "DiaChi", false, "DIA_CHI");
        public final static Property LoaiDiaDiem = new Property(2, String.class, "LoaiDiaDiem", false, "LOAI_DIA_DIEM");
        public final static Property Latitude = new Property(3, float.class, "latitude", false, "LATITUDE");
        public final static Property Longitude = new Property(4, float.class, "longitude", false, "LONGITUDE");
        public final static Property MaDanhMuc = new Property(5, Integer.class, "MaDanhMuc", false, "MA_DANH_MUC");
    };


    public BanDoModelDao(DaoConfig config) {
        super(config);
    }
    
    public BanDoModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'BAN_DO_MODEL' (" + //
                "'MA_DIA_DIEM' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ," + // 0: MaDiaDiem
                "'DIA_CHI' TEXT," + // 1: DiaChi
                "'LOAI_DIA_DIEM' TEXT," + // 2: LoaiDiaDiem
                "'LATITUDE' REAL NOT NULL ," + // 3: latitude
                "'LONGITUDE' REAL NOT NULL ," + // 4: longitude
                "'MA_DANH_MUC' INTEGER);"); // 5: MaDanhMuc
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'BAN_DO_MODEL'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, BanDoModel entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getMaDiaDiem());
 
        String DiaChi = entity.getDiaChi();
        if (DiaChi != null) {
            stmt.bindString(2, DiaChi);
        }
 
        String LoaiDiaDiem = entity.getLoaiDiaDiem();
        if (LoaiDiaDiem != null) {
            stmt.bindString(3, LoaiDiaDiem);
        }
        stmt.bindDouble(4, entity.getLatitude());
        stmt.bindDouble(5, entity.getLongitude());
 
        Integer MaDanhMuc = entity.getMaDanhMuc();
        if (MaDanhMuc != null) {
            stmt.bindLong(6, MaDanhMuc);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public BanDoModel readEntity(Cursor cursor, int offset) {
        BanDoModel entity = new BanDoModel( //
            cursor.getLong(offset + 0), // MaDiaDiem
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // DiaChi
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // LoaiDiaDiem
            cursor.getFloat(offset + 3), // latitude
            cursor.getFloat(offset + 4), // longitude
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5) // MaDanhMuc
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, BanDoModel entity, int offset) {
        entity.setMaDiaDiem(cursor.getLong(offset + 0));
        entity.setDiaChi(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setLoaiDiaDiem(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLatitude(cursor.getFloat(offset + 3));
        entity.setLongitude(cursor.getFloat(offset + 4));
        entity.setMaDanhMuc(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(BanDoModel entity, long rowId) {
        entity.setMaDiaDiem(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(BanDoModel entity) {
        if(entity != null) {
            return entity.getMaDiaDiem();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
