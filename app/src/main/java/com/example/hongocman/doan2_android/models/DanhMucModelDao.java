package com.example.hongocman.doan2_android.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.hongocman.doan2_android.models.DanhMucModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table DANH_MUC_MODEL.
*/
public class DanhMucModelDao extends AbstractDao<DanhMucModel, Long> {

    public static final String TABLENAME = "DANH_MUC_MODEL";

    /**
     * Properties of entity DanhMucModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MaDanhMuc = new Property(0, long.class, "MaDanhMuc", true, "MA_DANH_MUC");
        public final static Property TenDanhMuc = new Property(1, String.class, "TenDanhMuc", false, "TEN_DANH_MUC");
        public final static Property MoTa = new Property(2, String.class, "MoTa", false, "MO_TA");
        public final static Property Loai = new Property(3, Integer.class, "Loai", false, "LOAI");
        public final static Property Video = new Property(4, String.class, "Video", false, "VIDEO");
        public final static Property SDT = new Property(5, String.class, "SDT", false, "SDT");
    };


    public DanhMucModelDao(DaoConfig config) {
        super(config);
    }
    
    public DanhMucModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'DANH_MUC_MODEL' (" + //
                "'MA_DANH_MUC' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ," + // 0: MaDanhMuc
                "'TEN_DANH_MUC' TEXT," + // 1: TenDanhMuc
                "'MO_TA' TEXT," + // 2: MoTa
                "'LOAI' INTEGER," + // 3: Loai
                "'VIDEO' TEXT," + // 4: Video
                "'SDT' TEXT);"); // 5: SDT
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'DANH_MUC_MODEL'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DanhMucModel entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getMaDanhMuc());
 
        String TenDanhMuc = entity.getTenDanhMuc();
        if (TenDanhMuc != null) {
            stmt.bindString(2, TenDanhMuc);
        }
 
        String MoTa = entity.getMoTa();
        if (MoTa != null) {
            stmt.bindString(3, MoTa);
        }
 
        Integer Loai = entity.getLoai();
        if (Loai != null) {
            stmt.bindLong(4, Loai);
        }
 
        String Video = entity.getVideo();
        if (Video != null) {
            stmt.bindString(5, Video);
        }
 
        String SDT = entity.getSDT();
        if (SDT != null) {
            stmt.bindString(6, SDT);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public DanhMucModel readEntity(Cursor cursor, int offset) {
        DanhMucModel entity = new DanhMucModel( //
            cursor.getLong(offset + 0), // MaDanhMuc
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // TenDanhMuc
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // MoTa
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // Loai
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // Video
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // SDT
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DanhMucModel entity, int offset) {
        entity.setMaDanhMuc(cursor.getLong(offset + 0));
        entity.setTenDanhMuc(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMoTa(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLoai(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setVideo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setSDT(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(DanhMucModel entity, long rowId) {
        entity.setMaDanhMuc(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(DanhMucModel entity) {
        if(entity != null) {
            return entity.getMaDanhMuc();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
