package com.example.hongocman.doan2_android.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.hongocman.doan2_android.models.HinhAnhModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table HINH_ANH_MODEL.
*/
public class HinhAnhModelDao extends AbstractDao<HinhAnhModel, Long> {

    public static final String TABLENAME = "HINH_ANH_MODEL";

    /**
     * Properties of entity HinhAnhModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MaHinhAnh = new Property(0, long.class, "MaHinhAnh", true, "MA_HINH_ANH");
        public final static Property TieuDe = new Property(1, String.class, "TieuDe", false, "TIEU_DE");
        public final static Property DuongDan = new Property(2, String.class, "DuongDan", false, "DUONG_DAN");
        public final static Property MaDanhMuc = new Property(3, Integer.class, "MaDanhMuc", false, "MA_DANH_MUC");
    };


    public HinhAnhModelDao(DaoConfig config) {
        super(config);
    }
    
    public HinhAnhModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'HINH_ANH_MODEL' (" + //
                "'MA_HINH_ANH' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL ," + // 0: MaHinhAnh
                "'TIEU_DE' TEXT," + // 1: TieuDe
                "'DUONG_DAN' TEXT," + // 2: DuongDan
                "'MA_DANH_MUC' INTEGER);"); // 3: MaDanhMuc
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'HINH_ANH_MODEL'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, HinhAnhModel entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getMaHinhAnh());
 
        String TieuDe = entity.getTieuDe();
        if (TieuDe != null) {
            stmt.bindString(2, TieuDe);
        }
 
        String DuongDan = entity.getDuongDan();
        if (DuongDan != null) {
            stmt.bindString(3, DuongDan);
        }
 
        Integer MaDanhMuc = entity.getMaDanhMuc();
        if (MaDanhMuc != null) {
            stmt.bindLong(4, MaDanhMuc);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public HinhAnhModel readEntity(Cursor cursor, int offset) {
        HinhAnhModel entity = new HinhAnhModel( //
            cursor.getLong(offset + 0), // MaHinhAnh
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // TieuDe
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // DuongDan
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3) // MaDanhMuc
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, HinhAnhModel entity, int offset) {
        entity.setMaHinhAnh(cursor.getLong(offset + 0));
        entity.setTieuDe(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDuongDan(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setMaDanhMuc(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(HinhAnhModel entity, long rowId) {
        entity.setMaHinhAnh(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(HinhAnhModel entity) {
        if(entity != null) {
            return entity.getMaHinhAnh();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
